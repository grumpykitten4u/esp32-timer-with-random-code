volatile int interruptCounter;
int totalInterruptCounter;
  //
  String i;
  String k;
int led = 27;
//
hw_timer_t * timer = NULL;
portMUX_TYPE timerMux = portMUX_INITIALIZER_UNLOCKED;
 
void IRAM_ATTR onTimer() {
  portENTER_CRITICAL_ISR(&timerMux);
  interruptCounter++;
  portEXIT_CRITICAL_ISR(&timerMux);
 
 
}
 
void setup() {
  pinMode(led, OUTPUT);

  Serial.begin(115200);
 
  timer = timerBegin(0, 80, true);
  timerAttachInterrupt(timer, &onTimer, true);
  timerAlarmWrite(timer, 1000000, true);
  timerAlarmEnable(timer);
 
}
 
void loop()

{
  if (totalInterruptCounter == 10)
  {
 i=random(1000,9000);
  Serial.println(i);
  
 totalInterruptCounter = 0;
  }


  
  
 if (Serial.available()> 0)
  {
    k = Serial.readString();
    Serial.print("i got: ");
    Serial.println(k);
  }

  if (k == i)
  {
    digitalWrite(27,HIGH);
  }
  else
{
    digitalWrite(27,LOW);
}

 
  if (interruptCounter > 0) {
 
    portENTER_CRITICAL(&timerMux);
    interruptCounter--;
    portEXIT_CRITICAL(&timerMux);
 
    totalInterruptCounter++;
 
    
    
 
  }
}
